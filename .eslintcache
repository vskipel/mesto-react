[{"/Users/anton/mesto-react/mesto-react/src/index.js":"1","/Users/anton/mesto-react/mesto-react/src/reportWebVitals.js":"2","/Users/anton/mesto-react/mesto-react/src/components/App.js":"3","/Users/anton/mesto-react/mesto-react/src/components/Header.js":"4","/Users/anton/mesto-react/mesto-react/src/components/Main.js":"5","/Users/anton/mesto-react/mesto-react/src/components/Footer.js":"6","/Users/anton/mesto-react/mesto-react/src/components/PopupWithForm.js":"7","/Users/anton/mesto-react/mesto-react/src/utils/api.js":"8","/Users/anton/mesto-react/mesto-react/src/components/Card.js":"9","/Users/anton/mesto-react/mesto-react/src/components/ImagePopup.js":"10","/Users/anton/mesto-react/mesto-react/src/components/EditProfilePopup.js":"11","/Users/anton/mesto-react/mesto-react/src/context/CurrentUserContext.js":"12","/Users/anton/mesto-react/mesto-react/src/components/EditAvatarPopup.js":"13","/Users/anton/mesto-react/mesto-react/src/components/AddPlacePopup.js":"14"},{"size":514,"mtime":1611754583892,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1610541220714,"results":"17","hashOfConfig":"16"},{"size":5556,"mtime":1612023880927,"results":"18","hashOfConfig":"16"},{"size":252,"mtime":1610623593392,"results":"19","hashOfConfig":"16"},{"size":1411,"mtime":1612023306611,"results":"20","hashOfConfig":"16"},{"size":176,"mtime":1611918393149,"results":"21","hashOfConfig":"16"},{"size":717,"mtime":1612023683239,"results":"22","hashOfConfig":"16"},{"size":2409,"mtime":1612020358522,"results":"23","hashOfConfig":"16"},{"size":1963,"mtime":1612023581722,"results":"24","hashOfConfig":"16"},{"size":546,"mtime":1611916282782,"results":"25","hashOfConfig":"16"},{"size":2240,"mtime":1611918516425,"results":"26","hashOfConfig":"16"},{"size":121,"mtime":1611845100761,"results":"27","hashOfConfig":"16"},{"size":762,"mtime":1611845100758,"results":"28","hashOfConfig":"16"},{"size":1116,"mtime":1612023768945,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"75kefc",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/Users/anton/mesto-react/mesto-react/src/index.js",[],["60","61"],"/Users/anton/mesto-react/mesto-react/src/reportWebVitals.js",[],"/Users/anton/mesto-react/mesto-react/src/components/App.js",["62"],"import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImagePopup from './ImagePopup';\nimport api from '../utils/api';\nimport CurrentUserContext from '../context/CurrentUserContext';\nimport EditProfilePopup from '../components/EditProfilePopup';\nimport EditAvatarPopup from '../components/EditAvatarPopup';\nimport AddPlacePopup from '../components/AddPlacePopup'\n\nfunction App() {\n\n  // устанавливаем стейты для попапов\n  const  [isEditProfilePopupOpen, profilePopupIsOpen] = React.useState(false);\n  const  [isAddPlacePopupOpen, placePopupIsOpen] = React.useState(false);\n  const  [isEditAvatarPopupOpen, avatarPopupIsOpen] = React.useState(false);\n\n  // обработчики открытия попапов\n  const handleEditAvatarClick = () => {\n    avatarPopupIsOpen(true);\n  };\n\n  const handleEditProfileClick = () => {\n    profilePopupIsOpen(true);\n  };\n\n  const handleAddPlaceClick =() => {\n    placePopupIsOpen(true);\n  }\n  // обработчик закрытия попапов\n  const closeAllPopups = () => {\n    avatarPopupIsOpen(\"\");\n    profilePopupIsOpen(\"\");\n    placePopupIsOpen(\"\");\n    imagePopupIsOpen(\"\");\n    selectedCardData({});\n  }\n\n  \n  // стейты для открытия попапов карточек\n  const  [selectedCard, selectedCardData] = React.useState({});\n  const  [isImagePopupOpen, imagePopupIsOpen] = React.useState(false);\n\n  const handleCardClick = (card) => {\n    imagePopupIsOpen(true)\n    selectedCardData(card)\n  }\n\n  // стейт для определения пользоателя\n  const [currentUser, currentUserUpdate] = React.useState({});\n  React.useEffect(() => {\n    api.getProfileInfo()\n      .then(data => {\n        currentUserUpdate(data);\n      })\n      .catch((err) => 'Ошибка: ' + err)\n  }, [])\n\n  function handleUpdateUser(data) {\n    api.setProfileInfo(data)\n      .then(res => {\n        currentUserUpdate(res);\n        closeAllPopups();\n      })\n      .catch((err) => 'Ошибка: ' + err);\n\n  }\n\n  function handleUpdateAvatar(link) {\n    api.updateAvatar(link)\n      .then(res => {\n        console.log(res)\n        currentUserUpdate(res);\n        closeAllPopups();\n      })\n      .catch((err) => 'Ошибка: ' + err)\n  }\n\n  // получаем инфу о карточках\n  const  [cards, setCards] =  React.useState([]);\n  \n  React.useEffect(() => {\n    api.getInitialCards()\n      .then(data => {\n        setCards(data.map((item) => ({\n          _id: item._id,\n          link: item.link,\n          likes: item.likes,\n          name: item.name,\n          owner: item.owner\n      })))})\n      .catch((err) => 'Ошибка: ' + err)\n      \n  }, [])\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(liker => liker._id === currentUser._id);\n    \n    \n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n\n    // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n    const newCards = cards.map((oldCard) => {\n      if (oldCard._id === card._id) { \n        return newCard\n      } \n        else {\n          return  oldCard\n        }\n    });\n    \n    // Обновляем стейт\n    setCards(newCards);\n    })\n    .catch((err) => 'Ошибка: ' + err)\n  } \n\n  function handleCardDelete(card) {\n    // Снова проверяем владельца карточки\n    const isOwn = card.owner._id === currentUser._id;\n\n    // Отправляем запрос в API на удаление карточки\n    api.deleteCard(card._id).then(() => {\n  \n      // Формируем новый массив на основе имеющегося, удаляя из него карточку\n      const newCardsReduced = cards.filter((c) => c._id !== card._id);\n      \n      // Обновляем стейт\n      setCards(newCardsReduced);\n    })\n    .catch((err) => 'Ошибка: ' + err)\n  } \n\n  function handleAddPlaceSubmit(data) {\n    api.addCard(data)\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n        closeAllPopups(); \n      })\n      .catch((err) => 'Ошибка: ' + err)\n  }\n\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n    <div className=\"page\">\n        <Header />\n\n        <Main \n          onEditAvatar={handleEditAvatarClick} \n          onAddPlace={handleAddPlaceClick} \n          onEditProfile={handleEditProfileClick} \n          onCardClick={handleCardClick} \n          cards={cards} \n          onCardLike={handleCardLike}\n          onCardDelete={handleCardDelete} /> \n\n        <EditProfilePopup \n          isOpen={isEditProfilePopupOpen} \n          onClose={closeAllPopups} \n          onUpdateUser={handleUpdateUser}/> \n\n        <AddPlacePopup \n          isOpen={isAddPlacePopupOpen} \n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlaceSubmit} /> \n\n        <EditAvatarPopup \n          isOpen={isEditAvatarPopupOpen} \n          onClose={closeAllPopups} \n          onUpdateAvatar={handleUpdateAvatar} />\n\n        <ImagePopup \n          isOpen={isImagePopupOpen} \n          onClose={closeAllPopups} \n          card={selectedCard} />\n\n        <Footer /> \n      \n    </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n","/Users/anton/mesto-react/mesto-react/src/components/Header.js",[],"/Users/anton/mesto-react/mesto-react/src/components/Main.js",[],"/Users/anton/mesto-react/mesto-react/src/components/Footer.js",[],"/Users/anton/mesto-react/mesto-react/src/components/PopupWithForm.js",[],"/Users/anton/mesto-react/mesto-react/src/utils/api.js",[],"/Users/anton/mesto-react/mesto-react/src/components/Card.js",[],"/Users/anton/mesto-react/mesto-react/src/components/ImagePopup.js",[],"/Users/anton/mesto-react/mesto-react/src/components/EditProfilePopup.js",[],"/Users/anton/mesto-react/mesto-react/src/context/CurrentUserContext.js",[],"/Users/anton/mesto-react/mesto-react/src/components/EditAvatarPopup.js",[],"/Users/anton/mesto-react/mesto-react/src/components/AddPlacePopup.js",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":123,"column":11,"nodeType":"69","messageId":"70","endLine":123,"endColumn":16},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'isOwn' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]